[{"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\index.js":"1","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\reportWebVitals.js":"2","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\App.js":"3","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\constants.js":"4","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\stores\\stateRestart.js":"5","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\actions\\state.js":"6","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\actions\\levels.js":"7","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\stores\\stateGameover.js":"8","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\components\\Menu\\index.js":"9","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\components\\Board\\index.js":"10","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\components\\MenuApp\\index.js":"11","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\stores\\levels.js":"12","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\components\\MenuApp\\BombCounter\\index.js":"13","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\components\\MenuApp\\Timer\\index.js":"14","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\components\\MenuApp\\RestartButton\\index.js":"15","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\components\\Cell\\index.js":"16","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\actions\\rested_flag.js":"17","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\stores\\flag.js":"18"},{"size":500,"mtime":1616242424693,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1611415289599,"results":"21","hashOfConfig":"20"},{"size":2125,"mtime":1616267219142,"results":"22","hashOfConfig":"20"},{"size":361,"mtime":1616242424692,"results":"23","hashOfConfig":"20"},{"size":329,"mtime":1616242424697,"results":"24","hashOfConfig":"20"},{"size":457,"mtime":1616242424670,"results":"25","hashOfConfig":"20"},{"size":211,"mtime":1616242424663,"results":"26","hashOfConfig":"20"},{"size":332,"mtime":1616242424695,"results":"27","hashOfConfig":"20"},{"size":736,"mtime":1616263263669,"results":"28","hashOfConfig":"20"},{"size":4366,"mtime":1616258358519,"results":"29","hashOfConfig":"20"},{"size":446,"mtime":1616242424687,"results":"30","hashOfConfig":"20"},{"size":367,"mtime":1616242424695,"results":"31","hashOfConfig":"20"},{"size":1000,"mtime":1616268167278,"results":"32","hashOfConfig":"20"},{"size":1997,"mtime":1616266416953,"results":"33","hashOfConfig":"20"},{"size":686,"mtime":1616262639276,"results":"34","hashOfConfig":"20"},{"size":4091,"mtime":1616268874197,"results":"35","hashOfConfig":"20"},{"size":474,"mtime":1616268548428,"results":"36","hashOfConfig":"20"},{"size":552,"mtime":1616268524940,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1eo5w9n",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\index.js",[],["76","77"],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\reportWebVitals.js",[],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\App.js",["78","79","80"],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\constants.js",[],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\stores\\stateRestart.js",[],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\actions\\state.js",[],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\actions\\levels.js",[],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\stores\\stateGameover.js",[],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\components\\Menu\\index.js",[],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\components\\Board\\index.js",["81","82"],"import React, { Component } from 'react';\r\nimport Cell from \"../Cell\";\r\nimport store from \"../../stores/levels\"\r\nimport \"./style.css\";\r\nimport { Levels } from '../../constants';\r\nimport stateRestartStore from '../../stores/stateRestart';\r\nexport default class Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bombBoard: [],\r\n            board: [],\r\n            level: Levels.SUPEREASY\r\n        }\r\n    }\r\n\r\n    randomBomb(nBomb, nCell) {\r\n        let set = new Set();\r\n        while (set.size != nBomb) {\r\n            let n = Math.floor(Math.random() * nCell);\r\n            set.add(n);\r\n        }\r\n        return Array.from(set);\r\n    }\r\n\r\n    initBombBoard = (nBomb, width, height) => {\r\n        console.log(\"Tao bang: \"+width);\r\n        let bombPosArray = this.randomBomb(nBomb, width * height);\r\n        let bombBoard = Array(height).fill().map(() => Array(width).fill(0));\r\n\r\n        bombPosArray.forEach(bombIdx => {\r\n            let i = Math.floor(bombIdx / width);\r\n            let j = bombIdx % width;\r\n            bombBoard[i][j] = 1;\r\n        })\r\n        return bombBoard;\r\n    }\r\n\r\n    getNNeighborBomb = (matrix) => {\r\n        let n = 0;\r\n        for (let i = 0; i < 8; i++) {\r\n            n += matrix[i];\r\n        }\r\n        return n;\r\n    }\r\n\r\n    getValueBoard = (board, i, j) => {\r\n        let h = board.length;\r\n        let w = (h > 0) ? board[0].length : 0;\r\n\r\n        if (i < 0 || i >= h || j < 0 || j >= w) return 0;\r\n        return board[i][j];\r\n    }\r\n\r\n    findBoard = (bombBoard) => {\r\n        let h = bombBoard.length;\r\n        let w = (h > 0) ? bombBoard[0].length : 0;\r\n\r\n        let resBoard = [];\r\n\r\n        for (let i = 0; i < h; i++) {\r\n            let resRow = [];\r\n            for (let j = 0; j < w; j++) {\r\n                let value = \"\";\r\n                let a = [];\r\n\r\n                if (bombBoard[i][j] === 1) value = \"B\"\r\n                else {\r\n                    a.push(this.getValueBoard(bombBoard, i - 1, j - 1));\r\n                    a.push(this.getValueBoard(bombBoard, i - 1, j));\r\n                    a.push(this.getValueBoard(bombBoard, i - 1, j + 1));\r\n                    a.push(this.getValueBoard(bombBoard, i, j - 1));\r\n                    a.push(this.getValueBoard(bombBoard, i, j + 1));\r\n                    a.push(this.getValueBoard(bombBoard, i + 1, j - 1));\r\n                    a.push(this.getValueBoard(bombBoard, i + 1, j));\r\n                    a.push(this.getValueBoard(bombBoard, i + 1, j + 1));\r\n\r\n                    value = this.getNNeighborBomb(a)\r\n                }\r\n\r\n                resRow.push(value);\r\n            }\r\n            resBoard.push(resRow);\r\n        }\r\n        return resBoard;\r\n    }\r\n\r\n    renderBoard = () => {\r\n        let {board, bombBoard} = this.state;\r\n        console.log(board);\r\n        console.log(\"render board\");\r\n        return (\r\n            board.map((row, i) => {\r\n                return row.map((cell, j) => \r\n                <Cell i={i} j={j} key={i+'_'+j} className=\"cell\" nBomb={cell} isBomb={bombBoard[i][j]}/>)\r\n            })\r\n        )\r\n    }\r\n    getEmptyBoard = () => {\r\n        return {bombBoard: [], board: []}\r\n    }\r\n    restartGame = (level) => {\r\n        console.log(\"restart game\");\r\n        if (!level) level = this.state.level;\r\n        // Get level from store\r\n        \r\n        \r\n        let bombBoard = this.initBombBoard(level.nBomb, level.width, level.height);\r\n        let board = this.findBoard(bombBoard);\r\n        console.log(\"**\", bombBoard)\r\n        this.setState({\r\n            level: level,\r\n            bombBoard: bombBoard,\r\n            board: board\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        store.subscribe(() => {\r\n            console.log(\"store level changed\");\r\n            let level = store.getState()\r\n            this.restartGame(level);\r\n        })\r\n        stateRestartStore.subscribe(() => {\r\n            console.log(\"store restart changed\");\r\n            if (stateRestartStore.getState())\r\n                this.restartGame();\r\n        })\r\n        this.restartGame(this.state.level);\r\n    }\r\n\r\n\r\n    render() {\r\n        let { board, bombBoard } = this.state;\r\n        let h = board.length;\r\n        let w = (h > 0) ? board[0].length : 0;\r\n        let boardStyle = {\r\n            gridTemplateColumns: `repeat(${w}, auto)`,\r\n            gridTemplateRows: `repeat(${h}, auto)`\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"board\" style={boardStyle}>\r\n                    {this.renderBoard()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\components\\MenuApp\\index.js",[],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\stores\\levels.js",[],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\components\\MenuApp\\BombCounter\\index.js",["83"],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\components\\MenuApp\\Timer\\index.js",[],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\components\\MenuApp\\RestartButton\\index.js",[],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\components\\Cell\\index.js",["84"],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\actions\\rested_flag.js",[],"D:\\Project\\ReactJS\\Game\\Minesweeper\\src\\stores\\flag.js",["85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":21},{"ruleId":"90","severity":1,"message":"94","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":25},{"ruleId":"90","severity":1,"message":"95","line":43,"column":11,"nodeType":"92","messageId":"93","endLine":43,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":19,"column":25,"nodeType":"98","messageId":"99","endLine":19,"endColumn":27},{"ruleId":"90","severity":1,"message":"100","line":127,"column":22,"nodeType":"92","messageId":"93","endLine":127,"endColumn":31},{"ruleId":"90","severity":1,"message":"101","line":25,"column":14,"nodeType":"92","messageId":"93","endLine":25,"endColumn":19},{"ruleId":"90","severity":1,"message":"102","line":61,"column":30,"nodeType":"92","messageId":"93","endLine":61,"endColumn":38},{"ruleId":"90","severity":1,"message":"103","line":2,"column":9,"nodeType":"92","messageId":"93","endLine":2,"endColumn":15},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'DialogContent' is defined but never used.","Identifier","unusedVar","'DialogContentText' is defined but never used.","'isRestart' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'bombBoard' is assigned a value but never used.","'nBomb' is assigned a value but never used.","'isOpened' is assigned a value but never used.","'Levels' is defined but never used.","no-global-assign","no-unsafe-negation"]