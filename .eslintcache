[{"/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/index.js":"1","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/reportWebVitals.js":"2","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/App.js":"3","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/MenuApp/index.js":"4","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/Menu/index.js":"5","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/Board/index.js":"6","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/Timer/index.js":"7","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/RestartButton/index.js":"8","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/Cell/index.js":"9","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/BombCounter/index.js":"10","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/Theme/ThemeContext.js":"11","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/Theme/ThemedButton.js":"12","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/AppContext.js":"13"},{"size":500,"mtime":1611763593611,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1611415289599,"results":"16","hashOfConfig":"15"},{"size":1742,"mtime":1612715932807,"results":"17","hashOfConfig":"15"},{"size":449,"mtime":1612715840002,"results":"18","hashOfConfig":"15"},{"size":485,"mtime":1612690074350,"results":"19","hashOfConfig":"15"},{"size":4247,"mtime":1612690544053,"results":"20","hashOfConfig":"15"},{"size":228,"mtime":1612715248314,"results":"21","hashOfConfig":"15"},{"size":488,"mtime":1612667771223,"results":"22","hashOfConfig":"15"},{"size":2822,"mtime":1612713787455,"results":"23","hashOfConfig":"15"},{"size":369,"mtime":1612691447449,"results":"24","hashOfConfig":"15"},{"size":300,"mtime":1612582743510,"results":"25","hashOfConfig":"15"},{"size":380,"mtime":1612609454676,"results":"26","hashOfConfig":"15"},{"size":417,"mtime":1612690053073,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"jln769",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/index.js",[],["58","59"],"/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/reportWebVitals.js",[],"/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/App.js",["60"],"import React, { Component } from 'react'\nimport logo from './logo.svg';\n\nimport './App.css';\nimport { ThemeContext, themes } from \"./components/Theme/ThemeContext\";\nimport ThemedButton from \"./components/Theme/ThemedButton\";\nimport Menu from './components/Menu';\nimport MenuApp from './components/MenuApp'\nimport Board from './components/Board'\nimport { AppContext, Levels } from './AppContext';\n\nfunction Toolbar(props) {\n  return (\n    <ThemedButton onClick={props.changeTheme}>\n      Change Theme\n    </ThemedButton>\n  );\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isRestart: false,\n      theme: themes.light,\n      level: Levels.MEDIUM\n    }\n  }\n\n  toggleRestart = () => {\n    console.log(\"ttoggle restart\")\n    let isRestart = this.state.isRestart;\n    this.setState({ isRestart: !isRestart });\n  }\n\n  toggleTheme = () => {\n    this.setState(state => ({\n      theme: state.theme === themes.dark\n        ? themes.light\n        : themes.dark\n    }))\n  }\n\n  selectLevel = (value) => {\n    // Value : Levels.MEDIUM ..\n    this.setState({isRestart: true,level: Levels[value]});\n  }\n\n  render() {\n    let { isRestart, level } = this.state;\n    return (\n      <AppContext.Provider \n      value={{ \n        isRestart: isRestart,\n        level: level,\n        toggleRestart: this.toggleRestart, \n        }}>\n        <div className=\"App\">\n          <ThemeContext.Provider value={this.state.theme}>\n            <Toolbar changeTheme={this.toggleTheme} />\n          </ThemeContext.Provider>\n          <Menu selectLevel={this.selectLevel}/>\n          <MenuApp />\n          <div>\n            <Board/>\n          </div>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/MenuApp/index.js",[],"/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/Menu/index.js",[],"/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/Board/index.js",["61","62"],"import React, { Component } from 'react';\nimport { AppContext } from '../../AppContext';\nimport Cell from \"../Cell\";\nimport \"./style.css\";\n\nexport default class Board extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bombBoard: [],\n            board: []\n        }\n    }\n\n    randomBomb(nBomb, nCell) {\n        let set = new Set();\n        while (set.size != nBomb) {\n            let n = Math.floor(Math.random() * nCell);\n            set.add(n);\n        }\n        return Array.from(set);\n    }\n\n    initBombBoard = (nBomb, width, height) => {\n        console.log(\"Tao bang: \"+width);\n        let bombPosArray = this.randomBomb(nBomb, width * height);\n        let bombBoard = Array(height).fill().map(() => Array(width).fill(0));\n\n        bombPosArray.forEach(bombIdx => {\n            let i = Math.floor(bombIdx / width);\n            let j = bombIdx % width;\n            bombBoard[i][j] = 1;\n        })\n        return bombBoard;\n    }\n\n    getNNeighborBomb = (matrix) => {\n        let n = 0;\n        for (let i = 0; i < 8; i++) {\n            n += matrix[i];\n        }\n        return n;\n    }\n\n    getValueBoard = (board, i, j) => {\n        let h = board.length;\n        let w = (h > 0) ? board[0].length : 0;\n\n        if (i < 0 || i >= h || j < 0 || j >= w) return 0;\n        return board[i][j];\n    }\n\n    findBoard = (bombBoard) => {\n        let h = bombBoard.length;\n        let w = (h > 0) ? bombBoard[0].length : 0;\n\n        let resBoard = [];\n\n        for (let i = 0; i < h; i++) {\n            let resRow = [];\n            for (let j = 0; j < w; j++) {\n                let value = \"\";\n                let a = [];\n\n                if (bombBoard[i][j] === 1) value = \"B\"\n                else {\n                    a.push(this.getValueBoard(bombBoard, i - 1, j - 1));\n                    a.push(this.getValueBoard(bombBoard, i - 1, j));\n                    a.push(this.getValueBoard(bombBoard, i - 1, j + 1));\n                    a.push(this.getValueBoard(bombBoard, i, j - 1));\n                    a.push(this.getValueBoard(bombBoard, i, j + 1));\n                    a.push(this.getValueBoard(bombBoard, i + 1, j - 1));\n                    a.push(this.getValueBoard(bombBoard, i + 1, j));\n                    a.push(this.getValueBoard(bombBoard, i + 1, j + 1));\n\n                    value = this.getNNeighborBomb(a)\n                }\n\n                resRow.push(value);\n            }\n            resBoard.push(resRow);\n        }\n        return resBoard;\n    }\n\n    renderBoard = () => {\n        let {board, bombBoard} = this.state;\n        console.log(board);\n        let r = board.length;\n\n        console.log(\"render board\");\n        return (\n            board.map((row, i) => {\n                return row.map((cell, j) => \n                <Cell key={j+i*r} className=\"cell\" nBomb={cell} isBomb={bombBoard[i][j]}/>)\n            })\n        )\n    }\n    clearBoard = () => {\n        this.setState({bombBoard: [], board: []})\n    }\n    restartGame = () => {\n        console.log(\"restart game\");\n        this.clearBoard();\n\n        let context = this.context;\n        let level = context.level;\n        console.log(context.level);\n        let bombBoard = this.initBombBoard(level.nBomb, level.width, level.height);\n        let board = this.findBoard(bombBoard);\n        this.setState({\n            bombBoard: bombBoard,\n            board: board\n        })\n        \n    }\n    componentDidUpdate() {\n    }\n    componentDidMount() {\n        this.restartGame();\n    }\n\n    componentWillUpdate(nextProps) {\n        console.log(\"Update\" + this.context.isRestart)\n        if (this.context.isRestart) {\n            this.restartGame();\n            this.context.toggleRestart();\n        }\n        else {\n            return;\n        }\n    }\n  \n    render() {\n        let { board, bombBoard } = this.state;\n        let h = board.length;\n        let w = (h > 0) ? board[0].length : 0;\n        let boardStyle = {\n            gridTemplateColumns: `repeat(${w}, auto)`,\n            gridTemplateRows: `repeat(${h}, auto)`\n        }\n\n        return (\n            <div className=\"board\" style={boardStyle}>\n                {this.renderBoard()}\n            </div>\n        )\n    }\n}\n\nBoard.contextType = AppContext;","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/Timer/index.js",[],"/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/RestartButton/index.js",[],"/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/Cell/index.js",["63"],"import React, { Component } from 'react';\nimport {AppContext} from '../../AppContext'\nimport './style.css';\n\nexport class Cell extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nBomb: this.props.nBomb,\n            isBomb: this.props.isBomb,\n            isFlag: false,\n            isOpened: this.props.isOpened || false,\n\n            content: \"\", \n        }\n    }\n    \n    onGame = () => {\n        let {isOpened} = this.state;\n        \n        if (!isOpened) {\n            this.onCloseHandler();\n        } \n        else {\n            this.onOpenHandler();\n        }\n    }\n    \n    onCloseHandler = () => {\n        this.setState({content: \"\"});    \n    } \n\n    onOpenHandler = () => {\n        let {isBomb, nBomb} = this.state;\n        if (isBomb) {\n            this.onFinishHandler();\n        }\n        else {\n            this.setState({content: nBomb});\n        }\n    }\n\n    onFinishHandler = () => {\n        let {isBomb, nBomb, isOpened, isFlag} = this.state;\n        // Case Lose:\n        let content = \"\";\n        if (!isBomb) {\n            content = nBomb;\n            if (isFlag) {\n                content = \"M\";\n            }\n        } else {\n            content = \"*\";\n            alert(\"Boom! Gameover!\");\n        }\n        \n        this.setState({content: content});    \n        console.log(\"Update \");\n        console.log(content);\n    }\n    //*************** */\n    // User actions\n    //************** */\n    openCell = () => {\n        if (this.state.isOpened) return;\n        console.log(\"Open cell\");\n        this.setState({isOpened: true});\n        this.onOpenHandler();\n    }\n    toggleFlag = () => {\n        this.setState({isFlag: !this.state.isFlag});        \n    }\n    flagCell = (e) => {\n        e.preventDefault(); // Prevent open context menu\n        console.log(\"Flag\");\n        this.toggleFlag();\n        this.onGame();\n    }\n    componentWillUpdate(nextProps) {\n        let context = this.context;\n        if (this.state.isFlag) {\n            this.setState({isFlag: false});\n        }\n\n        if (nextProps !== this.props) {\n            let {nBomb, isBomb} = nextProps;\n            this.setState({nBomb: nBomb, isBomb: isBomb})\n        }\n        if (context && context.isRestart && this.state.isOpened) {\n            console.log(\"Restart\");\n                this.setState({isOpened: false, });\n        }\n    }\n    render() {\n        let {content, isOpened, isFlag} = this.state;\n        if (!isOpened) {\n            content=isFlag?\"F\":\"\";\n        }\n        return (\n                <div \n                className=\"cell\"  \n                onClick={this.openCell}\n                onContextMenu={this.flagCell}>\n                    <span>{content}</span>\n                </div>\n        )\n    }\n}\nCell.contextType = AppContext;\n\nexport default Cell\n","/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/BombCounter/index.js",[],"/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/Theme/ThemeContext.js",[],"/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/components/Theme/ThemedButton.js",[],"/media/dainguyen/DATA/Project/ReactJS/Game/Minesweeper/src/AppContext.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":12},{"ruleId":"72","severity":1,"message":"73","line":17,"column":25,"nodeType":"74","messageId":"75","endLine":17,"endColumn":27},{"ruleId":"68","severity":1,"message":"76","line":135,"column":22,"nodeType":"70","messageId":"71","endLine":135,"endColumn":31},{"ruleId":"68","severity":1,"message":"77","line":44,"column":29,"nodeType":"70","messageId":"71","endLine":44,"endColumn":37},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'bombBoard' is assigned a value but never used.","'isOpened' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]